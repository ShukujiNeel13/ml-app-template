# simple.gocd.yaml
pipelines:
  demo_ci_pipeline:
    group: demo_group
    materials:
      demo_git:  # this is the name of material
        git: https://github.com/ThoughtWorksInc/ci-workshop-app.git
    stages:
      - build: # name of stage
          clean_workspace: true
          jobs:
            build: # name of the job
              elastic_profile_id: demo-app
              tasks:
               - exec: # indicates type of task
                   command: bash
                   arguments:
                   - -c
                   - docker build . -t davified/ci-workshop-app --target Base
              artifacts:  # artifacts#build
              - external:
                  id: docker-release-candidate
                  store_id: dockerhub # artifact store id (configured on gocd)
                  configuration:
                    options:
                      Image: davified/ci-workshop-app
                      Tag: v${GO_PIPELINE_LABEL}
                    secure_options:
                      some_secure_property: ""
      - unit_test:
          clean_workspace: true
          jobs:
            unit_test:
              elastic_profile_id: demo-app
              tasks:
               - exec:
                   command: bash
                   arguments:
                   - -c
                   - docker run davified/ci-workshop-app bin/test.sh


# questions:
# - how to cache docker image locally so that we don't have to build from scratch in the first stage everytime?
# - how to configure external artifact store (dockerhub) using yaml? i.e. how to automate the instructions here https://docs.gocd.org/current/gocd_on_kubernetes/designing_a_cd_pipeline/creating_a_build_pipeline.html
# - storing secure variables: https://api.gocd.org/current/#encryption
# references 
# - https://pnguyen.io/posts/a-sample-gocd-pipeline and https://github.com/hpcsc/sample-pipeline-backend
